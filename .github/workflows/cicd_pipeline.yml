# .github/workflows/cicd_pipeline.yml

name: Deploy AIOps Agent and Dashboard

on:
  push:
    branches:
    - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY_NAME: ${{ secrets.PROJECT_NAME }}/frontend

jobs:
  # JOB 1: Build and push the container images first.
  build-and-push-images:
    name: 1. Build and Push Container Images
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.IAM_ROLE_NAME }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Build, tag, and push Lambda and Frontend images
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        # Build and push the Lambda image first
        docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:anomaly-detector-latest ./src/anomaly_detector
        docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:anomaly-detector-latest

        # Build and push the Frontend image
        docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:latest ./frontend
        docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:latest

  # JOB 2: Deploy ALL infrastructure now that the images exist.
  deploy-infrastructure:
    name: 2. Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: build-and-push-images # This job depends on the images being available
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.IAM_ROLE_NAME }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies for Zip-based Lambdas
      run: |
        pip install -r src/log_analyzer_rca/requirements.txt -t src/log_analyzer_rca/
        pip install -r src/remediation_engine/requirements.txt -t src/remediation_engine/
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
    - name: Terraform Init
      run: terraform -chdir=infrastructure init
    - name: Terraform Apply (Full Deployment)
      run: |
        terraform -chdir=infrastructure apply -auto-approve \
          -var="alert_email=${{ secrets.ALERT_EMAIL }}" \
          -var="project_name=${{ secrets.PROJECT_NAME }}" \
          -var="ec2_key_name=${{ secrets.EC2_KEY_NAME }}"
